"""Objetivo:

Entender como fazer rotas do tipo CRUD, visualizando no /docs o efeito das alterações feitas
em código, aplicando os parâmetros do FastAPI (path, description, response_model, status_code).

CRUD Routes
-----------

GET     /items      Returns the entire array *
GET     /items/:id  Returns an object by its id property
POST    /items      Inserts a new object in the array (autogenerated if not provided)
PUT     /items      Replaces the whole data bucket content
PUT     /items/:id  Performs a full object update by its id (replace)
DELETE  /items      Deletes the data bucket content
DELETE  /items/:id  Deletes an object by its id
PATCH   /items      Concatenates the arrays
PATCH   /items/:id  Performs a partial object update by its id (merge)."""

from http import HTTPStatus

from fastapi import APIRouter
from pydantic import BaseModel

router = APIRouter(prefix='/items', tags=['Items'])


class Item(BaseModel):
    id: str | None = None
    name: str | None = None
    price: float | None = None


DEFAULT_ITEM = Item(id='next2024.2', name='NExT 2024.2', price=3500.00)


@router.get('')
async def get_all_items() -> list[Item]:
    return [DEFAULT_ITEM]


@router.get('/{item_id}')
async def get_item(item_id: str) -> Item:
    return DEFAULT_ITEM


@router.post('', status_code=HTTPStatus.CREATED)
async def add_item(item: Item) -> Item:
    return DEFAULT_ITEM


@router.put('')
async def update_all_items(items: list[Item]) -> list[Item]:
    return [DEFAULT_ITEM]


@router.put('/{item_id}')
async def update_item(item_id: str, item: Item) -> Item:
    return DEFAULT_ITEM


@router.delete('', status_code=HTTPStatus.NO_CONTENT)
async def delete_all() -> None:
    return


@router.delete('/{item_id}', status_code=HTTPStatus.NO_CONTENT)
async def delete_item(item_id: str) -> None:
    return


@router.patch('')
async def update_some_items(items: list[Item]) -> list[Item]:
    return [DEFAULT_ITEM]


@router.patch('/{item_id}')
async def update_item_partially(item_id: str, item: Item) -> Item:
    return DEFAULT_ITEM
