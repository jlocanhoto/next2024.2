"""Objetivo:

Entender como fazer rotas do tipo CRUD, visualizando no /docs o efeito das alterações feitas
em código, aplicando os parâmetros do FastAPI (path, description, response_model, status_code).

CRUD Routes
-----------

GET     /users      Returns the entire array *
GET     /users/:id  Returns an object by its id property
POST    /users      Inserts a new object in the array (autogenerated if not provided)
PUT     /users      Replaces the whole data bucket content
PUT     /users/:id  Performs a full object update by its id (replace)
DELETE  /users      Deletes the data bucket content
DELETE  /users/:id  Deletes an object by its id
PATCH   /users      Concatenates the arrays
PATCH   /users/:id  Performs a partial object update by its id (merge)."""

from http import HTTPStatus

from fastapi import APIRouter
from pydantic import BaseModel

router = APIRouter(prefix='/users', tags=['Users'])


class User(BaseModel):
    id: str | None = None
    name: str | None = None
    email: str | None = None


DEFAULT_USER = User(id='uuid4', name='Aluno', email='aluno@next.com')


@router.get('')
async def get_all_users() -> list[User]:
    return [DEFAULT_USER]


@router.get('/{user_id}')
async def get_user(user_id: str) -> User:
    return DEFAULT_USER


@router.post('', status_code=HTTPStatus.CREATED)
async def add_user(user: User) -> User:
    return DEFAULT_USER


@router.put('')
async def update_all_users(users: list[User]) -> list[User]:
    return [DEFAULT_USER]


@router.put('/{user_id}')
async def update_user(user_id: str, user: User) -> User:
    return DEFAULT_USER


@router.delete('', status_code=HTTPStatus.NO_CONTENT)
async def delete_all() -> None:
    return


@router.delete('/{user_id}', status_code=HTTPStatus.NO_CONTENT)
async def delete_user(user_id: str) -> None:
    return


@router.patch('')
async def update_some_users(users: list[User]) -> list[User]:
    return [DEFAULT_USER]


@router.patch('/{user_id}')
async def update_user_partially(user_id: str, user: User) -> User:
    return DEFAULT_USER
